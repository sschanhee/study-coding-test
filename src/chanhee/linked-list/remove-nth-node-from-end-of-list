/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @param {number} n
 * @return {ListNode}
 */
var removeNthFromEnd = function (head, n) {
  if (!head.next) {
    return null;
  }
  let headPointer = head;
  for (let i = 0; i < n - 1; i++) {
    headPointer = headPointer.next;
  }
  if (!headPointer.next) {
    return head.next;
  }
  let trailingPointer = head;
  while (trailingPointer) {
    headPointer = headPointer?.next;
    if (!headPointer?.next) {
      trailingPointer.next = trailingPointer.next.next;
      break;
    }
    trailingPointer = trailingPointer.next;
  }
  return head;
};
